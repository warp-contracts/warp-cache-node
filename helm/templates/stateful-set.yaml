apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "warp-dre-node.fullname" . }}
  labels:
    {{- include "warp-dre-node.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "warp-dre-node.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "warp-dre-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "warp-dre-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "warp-dre-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: sqlite-volume
              mountPath: /app/sqlite
            - name: cache-volume
              mountPath: /app/cache
          env:
            - name: BULLMQ_HOST
              value: localhost
            - name: GW_TLS_CA_CERT
              valueFrom:
                secretKeyRef:
                  key: ca.crt
                  name: redis-crt
          envFrom:
            - secretRef:
                name: dre
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
          readinessProbe:
            httpGet:
              path: /status
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: redis
          image: redis:7.0-alpine
{{/*          ports:*/}}
{{/*            - containerPort: 6379*/}}
          command: ["redis-server"]
          args: ["--save", "20", "1", "--loglevel", "warning", "--maxmemory-policy", "noeviction"]
{{/*          volumes:*/}}
{{/*            - cache:/data*/}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: sqlite-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: cache-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
